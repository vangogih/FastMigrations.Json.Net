name: unity-tests

on:
  push:
    branches:
      - "github_actions"
  pull_request:
    branches:
      - "github_actions"

jobs:
  test-unity:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        unityVersion:
          #- 2019.4.40f1
          #- 2020.3.48f1
          #- 2021.3.36f1
          #- 2022.3.22f1
          - 2023.2.15f1
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Unity Library
        uses: actions/cache@v3
        with:
          path: FastMigrations.Unity/Library
          key: Library-FastMigrations-${{ matrix.unityVersion }}
          restore-keys: |
            Library-FastMigrations-
            Library-

      - name: Unity Test Runner
        uses: game-ci/unity-test-runner@v4
        id: unity-test
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ./FastMigrations.Unity
          unityVersion: ${{ matrix.unityVersion }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          testMode: editmode
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport'

      - name: Upload test result artifacts  
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results-${{ matrix.unityVersion }}
          path: ${{ steps.tests.outputs.artifactsPath }}
      
      - name: Upload coverage result artifacts
        uses: actions/upload-artifact@v3
        if: matrix.unityVersion == '2023.2.15f1'
        with:
          name: coverage-results
          path: ${{ steps.unity-test.outputs.coveragePath }}